import com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar

apply plugin: 'java'
apply plugin: 'kotlin'
apply plugin: 'groovy'
apply plugin: 'org.jetbrains.dokka'

buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'org.jetbrains.dokka:dokka-gradle-plugin:0.9.13'
        classpath "com.github.jengelman.gradle.plugins:shadow:${property("versions.shadow")}"
    }
}

configureJvmProject(project)
configurePublishing(project)

repositories {
    jcenter()
    mavenLocal()
    maven { url 'http://repository.jetbrains.com/utils/' }
    maven { url 'https://maven.google.com' }
}

configurations {
    agp25CompileOnly
    packedJars
}

def projectsToInclude = [
    ":kotlin-build-common",
    ":core:util.runtime",
    ":compiler:cli-common",
    ":compiler:daemon-common",
    ":kotlin-daemon-client"
]

projectsToInclude.forEach { projectToInclude ->
    dependencies {
        compileOnly(project(projectToInclude)) { transitive = false }
        packedJars(project(projectToInclude)) { transitive = false }
    }
}

dependencies {
    compile project(':kotlin-gradle-plugin-api')

    compile project(':kotlin-stdlib')
    runtime project(':kotlin-android-extensions')

    compile project(path: ':kotlin-annotation-processing-gradle', configuration: "runtimeJar")

    compileOnly 'com.android.tools.build:gradle:2.0.0'
    compileOnly 'org.codehaus.groovy:groovy-all:2.3.9'
    compileOnly 'org.jetbrains.kotlin:gradle-api:2.2'

    agp25CompileOnly 'com.android.tools.build:gradle:3.0.0-alpha1'
    agp25CompileOnly 'org.codehaus.groovy:groovy-all:2.3.9'
    agp25CompileOnly gradleApi()

    testCompile project (path: ':kotlin-build-common', configuration: 'tests-jar')
    testCompile project(':kotlin-test::kotlin-test-junit')
    testCompile "junit:junit:4.12"
}

def install = tasks.getByName("install")
install.dependsOn(
        ":kotlin-android-extensions:install",
        ":kotlin-annotation-processing-gradle:install",
        ":kotlin-build-common:install",
        ":kotlin-compiler-client-embeddable:install",
        ":kotlin-compiler-embeddable:install",
        ":kotlin-gradle-plugin-api:install",
        ":kotlin-stdlib:install"
)

// Validate that all dependencies 'install' tasks are added to 'test' dependencies
// Test dependencies are specified as paths to avoid forcing dependency resolution
// and also to avoid specifying evaluationDependsOn for each testCompile dependency.
gradle.taskGraph.whenReady {
    def notAddedTestTasks = []
    def installDependencies = install.dependsOn
    def runtimeConfigurations = ["runtime", "runtimeOnly"].collect { configurations.getByName(it) }

    for (configuration in runtimeConfigurations) {
        for (dependency in configuration.allDependencies) {
            if (!(dependency instanceof ProjectDependency)) continue

            def task = dependency.dependencyProject.tasks.findByName("install")
            if (task != null && !installDependencies.contains(task.path)) {
                notAddedTestTasks.add("\"${task.path}\"")
            }
        }
    }

    if (!notAddedTestTasks.isEmpty()) {
        throw new GradleException("Add the following tasks to ${test.path} dependencies:\n  ${notAddedTestTasks.join(",\n  ")}")
    }
}

tasks.withType(project.compileKotlin.class) {
    kotlinOptions.jdkHome = JDK_18
}

compileKotlin.dependsOn compileGroovy
compileGroovy.dependsOn.remove("compileJava")

def groovyClassesDir = file("${buildDir}/mainGroovyClasses")
compileGroovy.destinationDir = groovyClassesDir
sourceSets.main.compileClasspath += files(groovyClassesDir)
compileGroovy.classpath = sourceSets.main.compileClasspath - files(groovyClassesDir)
sourceSets.main.java.srcDirs += sourceSets.main.kotlin.srcDirs

sourceSets {
    agp25 {
        compileClasspath += configurations.compile + configurations.agp25CompileOnly + sourceSets.main.output
        compileClasspath += files(groovyClassesDir)
    }
}

compileAgp25Kotlin.dependsOn compileGroovy

processResources {
    expand(project.properties)
}

jar.enabled = false

task shadowJar(type: ShadowJar, dependsOn: agp25Classes) {
    configurations = [project.configurations.packedJars]
    from compileGroovy.destinationDir
    from sourceSets.agp25.output.classesDirs
    from sourceSets.main.output.classesDirs
    manifestAttributes(manifest, project)
}

configurations.archives.artifacts.removeAll()

artifacts {
    archives shadowJar
    archives sourcesJar
    archives javadocJar
}

test.executable = "${JDK_18}/bin/java"

dokka {
    outputFormat = 'markdown'
    includes = ["${projectDir}/Module.md"]
}

pluginBundle {
    plugins {
        kotlinJvmPlugin {
            id = 'org.jetbrains.kotlin.jvm'
            description = displayName = 'Kotlin JVM plugin'
        }
        kotlinAndroidPlugin {
            id = 'org.jetbrains.kotlin.android'
            description = displayName = 'Kotlin Android plugin'
        }
        kotlinAndroidExtensionsPlugin {
            id = 'org.jetbrains.kotlin.android.extensions'
            description = displayName = 'Kotlin Android Extensions plugin'
        }
        kotlinKaptPlugin {
            id = 'org.jetbrains.kotlin.kapt'
            description = displayName = 'Kotlin Kapt plugin'
        }
    }
}